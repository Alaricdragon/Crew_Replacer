# Overall idea of this project
  build a system, that lets modders for starsector add commodity's that can act like usable items in certain tasks.
  for example:
    salvaging requires 2 types of items. they are;
        crew
        heavy_machinery
    in this program, i will replace the 'crew' and 'heavy_machinery' with two crewReplacer_job's named:
        salvage_main
        salvage_Secondary
    and in the first, i will add a new crew type and name it 'crew'.
    and in the second, i will add a new crew type and name it 'heavy_machinery'
    now if a modder wants to add a second item that can act as crew in the salvage task they can try:
      crewReplacer_Job tempJob = crewReplacer_Main.getJob("salvage_main");
      tempJob.addNewCrew("name of this crew",1,10);
        -"name of this crew" is the commodities ID of the item you want to act as crew.
        -"1" is the crew power
        -"10" is the crew priority.
    and then, just like that, there is a second crew type added to this job. it will act the same as the normal crew
    and will loss crew at the same time the normal crew would, if it happens to be used in said job.

  one can do the same for any other job, or edit already existent crew at any time. (so long as they run crewReplacer_job.OrganizePriority() after)
  read the data at the "Job data that needs to be set and implemented" category of this file and look for items that are done to understand whats implemented so far.
  -for real, this is so not done, but i need to help people with something or other, so i gotta go back to this latter

# Index for all public functions that a person using this library will need to know.
  this is OUTDATED. look at the documentation because the documentation is cool: https://github.com/Alaricdragon/Crew_Replacer/tree/master/jars/src/desing/documentation
  crewReplacer_main
    -getJob(String job)
        reutrn crewReplacer_job
        returns a job with the same name as the inputed string. if there was no job with said name, creates one.
    -removeJob(String job)
        return boolean
        returns true if a job was removed. flase otherwize
        removes a job with the name of the inputeed string from memory. no idea why you would want to, but you can
    -addOrMergeJob(crewReplacer_Job job)
        return boolean
        reutrns false if this job was merged with another job.
        adds inputed job to memory, or if a job already exsists here with the same name, adds the inputed jobs data to the found job
        reutrns true if this job was added to memory
    -organizePriority()
        run the organizePriority function for every crewReplacer_job in crewReplacer_Main



  crewReplacer_job
    -public String name;
        the jobs name, and what you ask for if you want this job from crewReplacer_main.
    -public ArrayList<ArrayList<Integer>> crewPriority;
        although it is public, and you can edit it directly if you wish, i ask that you dont. use organize priority to keep this object functional.
        is the iner arraylist to determon what crew is removed first, and in what conditions.
    -public ArrayList<crewReplacer_Crew> Crews = new ArrayList<crewReplacer_Crew>();
        is all crews attached to this object.
        again, please do not edit this directly, or things can go wrong.
    -getCrew(String crew)
        return crewReplacer_Crew
        returns if a crew in this objects memory matches the inputted name, return it. otherwise create a new crew with this name, then returns it.
    -removeCrew(String crew)
        return boolean
        returns true if a crew is removed from this object. false otherwise
        only removes a crew if it matches the inputted string
    -addCrew(crewReplacer_Crew crew)
        return boolean
        returns true if a new crew is added, or false if said crew replaces an old one.
        only replaces a crew if one already exists with the same name.
    -addNewCrew(String crew,float crewPower,float crewPriority)
        return boolean
        returns true if a new crew is added, or false if said crew replaces an old one.
        only replaces a crew if one already exists with the same name.
        the extra inputs lets a user create a crew here if they want, instead of creating a new crew
    -organizePriority()
        sorts internal data of the object. must after a crew is added, or has its priority or crewPower changed. runs once on onGameLoad.
    -getAvailableCrew(CampaignFleetAPI fleet)
        return float[]
        returns the the number of crew for every crewReplacer_crew in this object.
    -getAvailableCrewPower(CampaignFleetAPI fleet)
        return float
        returns the crew power for all crew in this object combined.

    -automaticallyGetDisplayAndApplyCrewLost(CampaignFleetAPI fleet,int crewPowerRequired, float crew_power_to_lose,TextPanelAPI text)
        a basic 'do it all' command, for applying and displaying crew losses in a fleet
    -automaticallyGetAndApplyCrewLost(CampaignFleetAPI fleet, int crewPowerRequired, float crew_power_to_lose)
        returns ArrayList<Float>
        returns crew lost data. to be put into displayCrewLost
        like automaticallyGetDisplayAndApplyCrewLost, but it dose not display, instead it outputs crew_lost data

    -getCrewForJob(CampaignFleetAPI fleet, float crewPowerRequired)
        return ArrayList<float>
        returns an arryList of all crew used in this task.

    -getCrewLost(ArrayList<Float> crewUsed, float crew_power_to_lose)
        return ArrayList<Float>
        returns an arrayList of all crew lost in this task.
        crewUsed = this.getCrewForJob
    -applyCrewLost(ArrayList<Float> crewLost,CampaignFleetAPI fleet)
        removes crew from cargo, based on crewLost data.
        crewLost = this.getCrewLost
    -displayCrewLost(ArrayList<Float> crewLost, TextPanelAPI text)
        displays the crew lost in an TextPanelAPI.
        crewLost = this.getCrewLost
    -GetCrewNames()
        return String[]
        returns an array of every crew that was used.
    -displayCrewAvailable(CampaignFleetAPI fleet,TextPanelAPI text)
        displays the available crew in inputed fleet to an TextPanalAPI.



  crewReplacer_crew
    *make sure to run organizePriority of the crewReplacer_job class this crew is apart of, if any, when adding a crew or changeing
     the crewPriority or crewPower mid game.
    -public String name;
        commodities ID of the item you want to act like a crew in this context.
    -public ArrayList<String> tags;
        for user. dose nothing on its own
    -public float crewPriority = 0;
        the crewPriority of this crew. make sure to run crewReplacer_Job.organizePriority() priority after changing.
        lower priority crew are used in jobs first.
    -public float crewPower = 1;
        the 'strangth' of each crew in doing its job. make sure to run crewReplacer_Job.organizePriority() priority after changing.


    -hasTag(String tag)
        return boolean
        returns true if a tag with the inputted Strings name exists in this crews memory
    -AddTag(String tag)
        adds an tag with the inputted Strings name (dose nothing if tag with same name already exists)
    -RemoveTag(String tag)
        removes a tag with the same name as the inputted String (of there is one)
    -getCrewInFleet(CampaignFleetAPI fleet)
        return float
        returns number of crew in this fleet.
    -getCrewPowerInFleet(CampaignFleetAPI fleet)
        return float
        returns number of crew in this fleet * crew power.
    -getCrewToLose(float crewUsed,float crewLost)
        returns float
        returns the number of crew you want to lose (default: crewLost)
    -removeCrew(CampaignFleetAPI fleet,float CrewToLost)
        removes a number of this crew from this fleet.
    -DisplayedCrewNumbers(float numberOfItems, TextPanelAPI text)
        adds to text an display of the number of crew.

# Things that need to be done to complete this project
  fixes
    - survey is so broken. it only reduces cost. it kinda works because of this. but that might not be the best.
    - fix what happens when there are two + crew of the same priority in the same job
        (right now they are not chocen randomly, and they should be)
    - fix the fact that the marrine XP bounus is applying to all crew
        i thought this was OK when i first made this, but there XP never gose down, if you have no marriens.
        also make an example of how to give ones crew XP.
  futures
    -quests that require items might want to have a job assigned to them.
    - the ability to change what items crew/supply/repair ships, if that is possible.
    - 3 jobs for founding a new colony


# Job data that needs to be set and implemented (only jobs that are in the base game please)
  example_job_data_name(done/working on/not started/untested)
    - notes on this task
    job0intask(done/working on/not started/untested)
      - notes on this job in task
    job1intask(done/workingon/not started/untested)
      - notes on this job in task
    job2intask(done/working on/not started/untested)
      - notes on this job in task

  survey(done)
    -currently implemented in the survey plugin. this is bad, because the survey plugin only effects the cost of the survey, not what i have. so instead of having extra crew
      i reduce the cost of the survey. same effect, but kinda confusing and disorientating. also cant remove crews like i would like.
    -admins say that the survey plugin is the only place this can work, as were the crew available is calculated is part of the 'core' of the game, and cannot be changed.
    survey_crew(done)
    survey_supply(done)
        -crew added to the supply_job are not consumed when they should be.
        -the only way i can make then consumed, is if i make it happen every time someone mouses over a planet. and thats a no go for me thanks
        -this dose not effect normal supply.
    survey_heavy_machinery(done)
  salvage(done/tested)
    -DONE in theory. might have a bug or 50, but i simply don't know for sure. i think its working though
    -might need to make names more clear.
    salvage_crew(done)
    salvage_heavyMachinery(done)
  raiding(done/tested)
    -DONE in theory.
    -raiding_marines(done)
  crewships(not started)
    crew
    -i know there is code somewhere to check for the crew in ships, but i have no idea were
  supplyships(not started)
    supplyships
    -ship supply would be a useful crew job to have for modders. no idea were this is calculated.
  credits per mouth cost(?)?
    -im almost 100% sure that this would be a pain to implement, but at the same time, i remember reading somewhere that changing the display were the game shows you the cost per momth
      thing is very diffract, so it might be nice to have an 'job' that takes a tag and applys a crew cost for everything in it.
