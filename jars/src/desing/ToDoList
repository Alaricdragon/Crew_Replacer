regarding normadicSurvival compatibility:
DOING RIGHT THIS VERY SECOND:
    working on crewReplacer_Job
        1) getCargoSpaceRange -line 645+
            -current don't get the range of cargo use with any of the following lines. i need to re write them to do so.
            -in fact, what i have is so broken, i consider it to be non functional.
    working on CrewReplacer_normadicSurvivalA
        1)checkCapacityLimitGetMaxNumber
            this function is only partly built. see notes on its construction.


everything works, but one thing and one thing alone:
    the ability to calculate the max number of batches, and the ability to calculate how mush cargo im going to use this batch.
    slightly difficult. it turns out.
    like very difficult.
    so here my plan so far:
    (WORKING ON NOW)create a new crewReplacer_job. this job will:
        NOTE: no longer createing a new crew repalcer job. there is litterly no reason to not have this function on the main crewReplacer_job
        have a new function called float getCargoSpace(int power);
            -this function will get the used cargo space at maximum for the amount of used crew i have.
            -will use CrewReplacer_normadicSurvival_crew.getCargoSpace for this task.
            -if a given crew is not a instance of this class, it will use a backup to try and get the amount of available power.
            -NOTE: to avoid issues with inharantance, give the option in crewReplacer_crewset to abstain from adding a given crew to this crewSet.
    upgrade CrewReplacer_normadicSurvival_crew:
        NOTE: no longer adding this to CrewReplacer_normadicSurvival_crew. im not going up apply this stright to the main crew file. so anyone can use it.
        have a new function called float getCargoSpace(int number_of_crew);
            -this will return the amount of cargo space this mush crew has.

    this will make it easyer to get the amount of crew for each job.
    now part 2:
    in CheckCapacity limit:
        i can run some code to try and get the real capacity limit. it will be more costly, but its better then being inaccurate to the extreme.

    in recalculateBatchLimit:
        every time i move the slidererereerjanjdaksdaksdsaadada.... wait.
        if i can succsesfully use CheckCapacityLimit to get the max amount of items,

issue found that needs to be fixed:
    1) the way i overwrite functions. i need to (when possable) find a way to use .super() in every one, for version combatability reasons.
        even if that means i need to undo changes sometimes, it might still be extremely useful..
        (examples were i should have done that: marketCMD, salvageCMD survey pluging exstra....)

    2) in CrewReplacer_normadicSurvivalA : checkCapacityLimitGetMaxNumber
        i need to use a more efficient method for getting the amount of batches i can store.



regarding survey job:
    POSSIBLE SOLUTION:
    1) get getConsumed() and getRequired()
        1) reduce crew/supplies/hevy matchenery cost by available crew replacer crew.
        2) add crew replacer crew of said jobs to costs in bouth functiions.
        3) if 2 crews have the same priority should the max required amount of said item?
        4) having this code runs set 'can xp crew replacer' boolean to true
        5) save the rqueired amount of items for getXP
    2) getXP(): THIS FUNCTION RUNS AFTER survey is completed.
        1) run crewReplacer automaticly get and apply crew losses for all functions.
        2) set can xp crew replacer boolean to false.

    im trying to find the position were the code is ran for this job, so i can mimic it. it does not exist in the place it should though.
    im going to try and get myself a new copy of starsector core next time i try to fight with this.
    i have a path in. my victory is now possible.


add all not yet added jobs from vanilla starsector into this mod.

Bugs:
    in getCargoSpaceRange in crewReplacer_Job:
        1) this set of code can cause issues with other sets of code, causeing a miscalculation were i think i need less cargo then i acsualy need at low amounts.
           cant just remove Math.min, because then it can get claim to use mush more cargo then it actually does.
            if(includeDefence){
                float tempbT =  tempb / Crew.getCrewDefence(cargo);
                tempb = Math.min(tempb,tempbT);
            }


create an new 'crew cost' custom job.
-an idea, or issue i have, is with crew cost. as it is now, players must make new code to be able to apply crew cost to there crew.,
 however, it should be simple to create an job in crewReplacer to do that. dont know if anyone will use it, but they dont have to if they dont want to.
 *Needs:
 -to be able to apply crew cost at the start of the momth, week, day, or always.
    -when applying the code over time, it should be able to know how mush cost an crew used, by calculating the advradge crew
     in your fleet of this type over that time.
    -should be able to apply any item as costs for the crew. for example, credits, food, supply, mettle, other crew, exstra.
    -should beagle to apply an by product to the crew cost? might be very easy if i allow crew to have negative cost.