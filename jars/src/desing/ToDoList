issue found that needs to be fixed:
    1) the way i overwrite functions. i need to (when possable) find a way to use .super() in every one, for version combatability reasons.
        even if that means i need to undo changes sometimes, it might still be extremely useful..
        (examples were i should have done that: marketCMD, salvageCMD survey pluging exstra....)

    2) in CrewReplacer_normadicSurvivalA : checkCapacityLimitGetMaxNumber
        i need to use a more efficient method for getting the amount of batches i can store.

missing core jobs:
    found a market:
        founding a market code -is- possable. i know this because i have done so in market retrofits. i would simply need to
        create a system like that but for here. although i could also cheat and just use market retrofits, but that is... rude.
        so what do i need to do?
        1) swap the demand of create a outpost with showdow crew demand.
        2) create a colonly founding interface (its called sometihng else check market retrofit).
        3) give this interface the same 'determin if the player is at this world' that market retrofits has.
        4) set it to simply remove the wanted to be removed items every time a player founds a market.
        5) set it to not be instaled provided marketRetrofits is inabled.
        6) create a new market founder in market retorfits to replcer the deaflt one.

    crewShips
        -show on how mush crew you have in fleet.
        -allow min crew to be a things
        possable locations of things:
           CargoAPI: getCrew()
                -this is not a good idea. a lot of the code gets the commodity crew directly. so this would be difficult.
           shipAPI - getCurrentCR()
                -for changing the amount of crew on a ship and weather or not its fully crewed.
                -maybe also use something like a hidden hullmod on player ships that modifys the combat ready interface??
           Interface CampaignFleetAPI
                -forceSync()
                -setAIMode(boolean aiMode)
           https://fractalsoftworks.com/starfarer.api/com/fs/starfarer/api/campaign/listeners/FleetEventListener.html
                -maybe for crew losses and recovery after combat..????
            Interface FleetMemberAPI
                -might be something good here, i dont know =(
            Interface MutableFleetStatsAPI
                -im grasping at straw...
    fuelShips
        -FleetLogisticsAPI
            not mush here, but might be a good backup if i need to do to it what i did to the survey plugin.
    supplyShips
    use crew storage
           CargoAPI: getCrew()
                -this is not a good idea. a lot of the code gets the commodity crew directly. so this would be difficult.
                -PlayerFleetPersonnelTracker might be something in here.
    use fuel storage
           CargoAPI: getFuel()
                -this is not a good idea. a lot of the code gets the commodity crew directly. so this would be difficult.
                -on the other hand, it might be a very good idea if its only used in like one place.



regarding survey job:
    this works now. only one issue:
    getXP() from the survey plugging may cause supplys to drop. because thats were im running my code. this is a issue.

Bugs:
    in getCargoSpaceRange in crewReplacer_Job:
        1) this set of code can cause issues with other sets of code, causeing a miscalculation were i think i need less cargo then i acsualy need at low amounts.
           cant just remove Math.min, because then it can get claim to use mush more cargo then it actually does.
            if(includeDefence){
                float tempbT =  tempb / Crew.getCrewDefence(cargo);
                tempb = Math.min(tempb,tempbT);
            }


create an new 'crew cost' custom job.
-an idea, or issue i have, is with crew cost. as it is now, players must make new code to be able to apply crew cost to there crew.,
 however, it should be simple to create an job in crewReplacer to do that. dont know if anyone will use it, but they dont have to if they dont want to.
 *Needs:
 -to be able to apply crew cost at the start of the momth, week, day, or always.
    -when applying the code over time, it should be able to know how mush cost an crew used, by calculating the advradge crew
     in your fleet of this type over that time.
    -should be able to apply any item as costs for the crew. for example, credits, food, supply, mettle, other crew, exstra.
    -should beagle to apply an by product to the crew cost? might be very easy if i allow crew to have negative cost.